version: '3.1'

volumes:
  minio_data:
  mongo_data:
  demo_gems:

networks:
  backend:

services:

  minio:
    image: minio/minio
    ports:
      - ${MINIO_PORT:-9000}:9000
    volumes:
      - minio_data:/export
    command: server /export
    networks:
      - backend
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  mongo:
    image: mongo:3.4
    ports:
      - ${MONGO_PORT:-27017}:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  web:
    image: icalialabs/mongo-minio-demo:development
    build:
      dockerfile: dev.Dockerfile
      context: .
    ports:
      - ${WEB_PORT:-3000}:3000
    entrypoint: /usr/src/app/bin/dev-entrypoint
    volumes:
      # Mount our app code directory (".") into our app containers at the "/usr/src/app" folder:
      - .:/usr/src/app

      # Mount the 'gems' volume on the folder that stores bundled gems:
      - demo_gems:/usr/local/bundle

    networks:
      - backend

    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    command: rails server -p 3000 -b 0.0.0.0

    depends_on:
      - minio
      - mongo

    environment: &app_env
      MONGOHQ_URL: mongodb://mongo:27017/mongo_minio_demo_development

      AWS_S3_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

      RAILS_ENV: development
      RACK_ENV: development
      RAILS_LOG_TO_STDOUT: "true"
